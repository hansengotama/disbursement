// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	disbursementrepo "github.com/hansengotama/disbursement/internal/repository/disbursement"
	mock "github.com/stretchr/testify/mock"
)

// IDisbursementRepository is an autogenerated mock type for the IDisbursementRepository type
type IDisbursementRepository struct {
	mock.Mock
}

// Insert provides a mock function with given fields: param
func (_m *IDisbursementRepository) Insert(param disbursementrepo.InsertDisbursementParam) error {
	ret := _m.Called(param)

	if len(ret) == 0 {
		panic("no return value specified for Insert")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(disbursementrepo.InsertDisbursementParam) error); ok {
		r0 = rf(param)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIDisbursementRepository creates a new instance of IDisbursementRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIDisbursementRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *IDisbursementRepository {
	mock := &IDisbursementRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
